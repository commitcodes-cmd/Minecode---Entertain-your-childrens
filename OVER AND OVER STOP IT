<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<title>Blockly Project</title>
<style>
body {
  font-family: Arial, sans-serif;
  margin: 20px;
}
.blocklyMainBackground {
  fill: url(#blocklyGradientBackground) !important;
}
.blocklyText {
  font-family: Monospace !important;
  font-weight: normal !important;
}
button {
  background-color: #4CAF50;
  color: white;
  padding: 10px 20px;
  font-size: 16px;
  border: none;
  border-radius: 5px;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.3);
  cursor: pointer;
  margin-bottom: 10px;
}
.project-box {
  background-color: #eee;
  padding: 10px;
  margin: 5px 0;
  cursor: pointer;
  border-radius: 5px;
}
</style>
<svg height="0" width="0">
  <defs>
    <linearGradient id="blocklyGradientBackground" x1="0%" y1="0%" x2="0%" y2="100%">
      <stop offset="0%" style="stop-color:#000000; stop-opacity:1" />
      <stop offset="100%" style="stop-color:#444444; stop-opacity:1" />
    </linearGradient>
  </defs>
</svg>
</head>
<body>

<div id="homeScreen">
  <button onclick="addProject()">+ Add Project</button>
  <div id="projectsList"></div>
</div>

<div id="workspaceScreen" style="display:none;">
  <button onclick="goHome()">Back to Home</button>
  <button onclick="runCode()">Run on Minecraft</button>
  <div id="blocklyDiv" style="height: 800px; width: 100%;"></div>
</div>

<script src="https://unpkg.com/blockly/blockly.min.js"></script>
<script>
// ---- Global Variables ----
let workspace = null;
let currentProject = null;

// ---- Toolbox XML ----
const toolboxXml = `
<xml id="toolbox" style="display:cover">
  <category name="Basic" colour="#FFF500">
    <block type="on_start"></block>
    <block type="place_block"></block>
    <block type="on_chat_command"></block>
    <block type="block_broken"></block>
    <block type="console_log"></block>
    <block type="true_false_logic"></block>
    <block type="boolean"></block>
  </category>
  <category name="Agent" colour="#FF3400">
    <block type="agent"></block>
    <block type="agent_place_block"></block>
    <block type="agent_break_block"></block>
    <block type="agent_orientation"></block>
  </category>
  <category name="Player" colour="#0078D7">
    <block type="place_block"></block>
    <block type="on_chat_command"></block>
    <block type="sayblock"></block>
  </category>
  <category name="event" colour="#569137">
    <block type="on_start"></block>
    <block type="block_broken"></block>
  </category>
</xml>
`;

// ---- Define Blocks (JSON Array) ----
Blockly.defineBlocksWithJsonArray([
  {
    "type":"place_block","message0":"Place Block %1 %2 At X %3 %4 Y %5 %6 Z %7",
    "args0":[
      {"type":"field_dropdown","name":"NAME","options":[["Lever","Places Lever"],["Repeated Command Block","Places Repeated Command Block"],["Item Frame","Places Item Frame"],["Oak Button","Places Oak Button"],["Chain Command Block","Places Chain Command Block"],["Grass","Places Grass"],["Stone Button","Places Stone Button"],["Nether Brick Button","Places Nether Brick Button"],["Crimson Button","Places Crimson Button"],["Warped Button","Places Warped Button"],["Command Block","Places Command Block"],["Dirt","Places Dirt"],["Chain","places Chain"],["Glass","Places Glass"],["Red Glass","Places Glass as the Default Hue"],["Green Glass","Places Glass as the Green Hue"],["Grass Trail","Places Grass Trail"],["Yellow Glass","Places Glass as the Yellow Hue"],["Lime Glass","Places Glass as the Lime Hue"],["Black Glass","Places Glass with No brightness"],["White Glass","Places Glass as the High brightness"],["Gray Glass","Places Gray Glass as the Low Brightness"],["Light Gray Glass","Places Glass almost like white glass"],["Brown glass","Places Glass as the Low brightness Orange"],["Ice","Places Ice"],["Packed Ice","Places Packed Ice"],["Glowstone","Places Glowstone"],["Stone","Places Stone"],["Cobblestone","Places Cobblestone"],["Tinted Glass","Places Glass as the Low purple color, Used as a vibrancy of colors"],["Structure Void","Places Structure Void"],["Structure Void 2","Places Structure Void 2"],["Redstone","Places Redstone"],["Redstone Lamp","Places Redstone Lamp"]]},
      {"type":"input_dummy"},
      {"type":"field_number","name":"Sa","value":0},
      {"type":"input_dummy","align":"RIGHT"},
      {"type":"field_number","name":"Sasa","value":0},
      {"type":"input_dummy","align":"RIGHT"},
      {"type":"field_number","name":"Sasasa","value":0}
    ],
    "previousStatement":null,"nextStatement":null,"colour":"#0078D7"
  },
  {
    "type":"on_start","message0":"on start %1","args0":[{"type":"input_statement","name":"NAME"}],
    "colour":"#569137","tooltip":"starts the script, without that, it will not work"
  },
  {
    "type":"on_chat_command","message0":"On chat command %1 %2","args0":[{"type":"field_input","name":"NAME","text":":)"},{"type":"input_statement","name":"NAME"}],
    "colour":"#0078D7"
  },
  {
    "type":"block_broken","message0":"on block broken %1","args0":[{"type":"input_statement","name":"NAME"}],
    "colour":"#569137"
  },
  {
    "type":"agent","message0":"Agent turn %1","args0":[{"type":"field_dropdown","name":"NAME","options":[["Left","Turns left"],["Right","Turns right"]]}],
    "previousStatement":null,"nextStatement":null,"colour":"#FF3400"
  },
  {
    "type":"agent_place_block","message0":"Agent place %1","args0":[{"type":"field_dropdown","name":"NAME","options":[["Lever","Places Lever"],["Repeated Command Block","Places Repeated Command Block"],["Item Frame","Places Item Frame"],["Oak Button","Places Oak Button"],["Chain Command Block","Places Chain Command Block"],["Grass","Places Grass"],["Stone Button","Places Stone Button"],["Nether Brick Button","Places Nether Brick Button"],["Crimson Button","Places Crimson Button"],["Warped Button","Places Warped Button"],["Command Block","Places Command Block"],["Dirt","Places Dirt"],["Grass Trail","places Grass Trail"],["Glass","Places Glass"],["Red Glass","Places Glass as the Default Hue"],["Green Glass","Places Glass as the Green Hue"],["option","OPTIONNAME"],["Yellow Glass","Places Glass as the Yellow Hue"],["Lime Glass","Places Glass as the Lime Hue"],["Black Glass","Places Glass with No brightness"],["White Glass","Places Glass as the High brightness"],["Gray Glass","Places Gray Glass as the Low Brightness"],["Light Gray Glass","Places Glass almost like white glass"],["Brown glass","Places Glass as the Low brightness Orange"],["Ice","Places Ice"],["Packed Ice","Places Packed Ice"],["Glowstone","Places Glowstone"],["Stone","Places Stone"],["Cobblestone","Places Cobblestone"],["Tinted Glass","Places Glass as the Low purple color, Used as a vibrancy of colors"],["Structure Void","Places Structure Void"],["Structure Void 2","Places Structure Void 2"],["Redstone","Places Redstone"],["Redstone Lamp","Places Redstone Lamp"]]}],
    "previousStatement":null,"nextStatement":null,"colour":"#FF3400"
  },
  {
    "type":"agent_break_block","message0":"Agent break block %1","args0":[{"type":"field_dropdown","name":"NAME","options":[["Lever","Places Lever"],["Repeated Command Block","Places Repeated Command Block"],["Item Frame","Places Item Frame"],["Oak Button","Places Oak Button"],["Chain Command Block","Places Chain Command Block"],["Grass","Places Grass"],["Stone Button","Places Stone Button"],["Nether Brick Button","Places Nether Brick Button"],["Crimson Button","Places Crimson Button"],["Warped Button","Places Warped Button"],["Command Block","Places Command Block"],["Dirt","Places Dirt"],["chain","places Chain"],["Glass","Places Glass"],["Red Glass","Places Glass as the Default Hue"],["Green Glass","Places Glass as the Green Hue"],["","OPTIONNAME"],["Yellow Glass","Places Glass as the Yellow Hue"],["Lime Glass","Places Glass as the Lime Hue"],["Black Glass","Places Glass with No brightness"],["White Glass","Places Glass as the High brightness"],["Gray Glass","Places Gray Glass as the Low Brightness"],["Light Gray Glass","Places Glass almost like white glass"],["Brown glass","Places Glass as the Low brightness Orange"],["Ice","Places Ice"],["Packed Ice","Places Packed Ice"],["Glowstone","Places Glowstone"],["Stone","Places Stone"],["Cobblestone","Places Cobblestone"],["Tinted Glass","Places Glass as the Low purple color, Used as a vibrancy of colors"],["Structure Void","Places Structure Void"],["Structure Void 2","Places Structure Void 2"],["Redstone","Places Redstone"],["Redstone Lamp","Places Redstone Lamp"]]}],
    "previousStatement":null,"nextStatement":null,"colour":"#FF3400"
  },
  {
    "type":"agent_orientation","message0":"Agent Orientation","output":null,"colour":"#FF3400","tooltip":"agent"
  },
  {
    "type":"boolean","message0":"%1","args0":[{"type":"field_dropdown","name":"BOOL","options":[["true","TRUE"],["false","FALSE"]]}],"output":"Boolean","colour":"#459197","tooltip":"Returns true or false"
  },
  {
    "type":"console_log","message0":"Console %1 %2","args0":[{"type":"field_dropdown","name":"NAME","options":[["Trace","Logs an original log to a trace"],["Table","Logs a table"],["Error","Logs an error"],["log","Logs a normal log"],["Value","Logs a value Expected by a Variable count and equated by an assert of how many values are there"],["Debug","Logs a debug"],["Warn","Logs a warn"],["Info","Logs an info"]]},{"type":"field_input","name":"Default","text":"Hello"}],
    "previousStatement":null,"nextStatement":null,"colour":"#000045"
  },
  {
    "type":"true_false_logic","message0":"If %1 Then %2","args0":[{"type":"input_value","name":"Boolean","align":"RIGHT"},{"type":"input_statement","name":"NAME"}],"previousStatement":null,"nextStatement":null,"colour":"#459197"
  },
  {
    "type":"sayblock","message0":"Say ' %1 '","args0":[{"type":"field_input","name":"input","text":":)"}],"previousStatement":null,"nextStatement":null,"colour":"#0078D7"
  }
]);

// ---- Functions ----
function addProject() {
  const name = prompt("Enter project name:");
  if(!name) return;
  currentProject = name;
  showWorkspace();
  saveAllProjects();
}

function showWorkspace() {
  document.getElementById('homeScreen').style.display = 'none';
  document.getElementById('workspaceScreen').style.display = 'block';
  if(!workspace) {
    workspace = Blockly.inject('blocklyDiv', {toolbox: Blockly.Xml.textToDom(toolboxXml), renderer: 'zelos'});
    workspace.addChangeListener(autoSave);
  }
  loadProject(currentProject);
}

function goHome() {
  document.getElementById('homeScreen').style.display = 'block';
  document.getElementById('workspaceScreen').style.display = 'none';
  saveProject(currentProject);
  showProjectList();
}

function autoSave() {
  if(currentProject) saveProject(currentProject);
}

function saveProject(name) {
  const xml = Blockly.Xml.workspaceToDom(workspace);
  const xmlText = Blockly.Xml.domToText(xml);
  let projects = JSON.parse(localStorage.getItem('projects')|| '{}');
  projects[name] = xmlText;
  localStorage.setItem('projects', JSON.stringify(projects));
}

function loadProject(name) {
  let projects = JSON.parse(localStorage.getItem('projects')|| '{}');
  if(projects[name]) {
    workspace.clear();
    const xml = Blockly.Xml.textToDom(projects[name]);
    Blockly.Xml.domToWorkspace(xml, workspace);
  } else workspace.clear();
}

function saveAllProjects() {
  showProjectList();
}

function showProjectList() {
  const projectsDiv = document.getElementById('projectsList');
  projectsDiv.innerHTML = '';
  const projects = JSON.parse(localStorage.getItem('projects')|| '{}');
  for(const name in projects) {
    const div = document.createElement('div');
    div.className = 'project-box';
    div.textContent = name;
    div.onclick = ()=> {currentProject=name; showWorkspace();}
    projectsDiv.appendChild(div);
  }
}

// ---- Run Code Placeholder ----
function runCode() {
  // Placeholder: You would connect this to Minecraft Bedrock API
  alert('Code sent to Minecraft Bedrock for project: ' + currentProject);
}

// ---- Initialize ----
showProjectList();
</script>
</body>
</html>
